{{- if .Values.imageCleaner.enabled -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-image-cleaner
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name:  {{ .Release.Name }}-image-cleaner
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-image-cleaner
        app: binder
        component: image-cleaner
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      {{- with include "jupyterhub.imagePullSecrets" (dict "root" . "image" .Values.imageCleaner.image) }}
      imagePullSecrets: {{ . }}
      {{- end }}
      {{- with .Values.config.KubernetesBuildExecutor.tolerations }}
      tolerations:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      nodeSelector: {{ .Values.config.BinderHub.build_node_selector | toJson }}
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ .Release.Name }}-image-cleaner
      {{- end }}
      containers:
      - name: image-cleaner-{{ .Values.imageBuilderType }}
        image: {{ .Values.imageCleaner.image.name }}:{{ .Values.imageCleaner.image.tag }}
        {{- with .Values.imageCleaner.image.pullPolicy }}
        imagePullPolicy: {{ . }}
        {{- end }}
        volumeMounts:
        - name: storage-{{ .Values.imageBuilderType }}
          mountPath: /var/lib/{{ .Values.imageBuilderType }}
        - name: socket-{{ .Values.imageBuilderType }}
          mountPath: /var/run/docker.sock
        env:
        - name: DOCKER_IMAGE_CLEANER_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: DOCKER_IMAGE_CLEANER_PATH_TO_CHECK
          value: /var/lib/{{ .Values.imageBuilderType }}
        - name: DOCKER_IMAGE_CLEANER_DELAY_SECONDS
          value: {{ .Values.imageCleaner.delay | quote }}
        - name: DOCKER_IMAGE_CLEANER_THRESHOLD_TYPE
          value: {{ .Values.imageCleaner.imageGCThresholdType | quote }}
        - name: DOCKER_IMAGE_CLEANER_THRESHOLD_HIGH
          value: {{ .Values.imageCleaner.imageGCThresholdHigh | quote }}
        - name: DOCKER_IMAGE_CLEANER_THRESHOLD_LOW
          value: {{ .Values.imageCleaner.imageGCThresholdLow | quote }}
      terminationGracePeriodSeconds: 0
      volumes:
      {{- if eq .Values.imageBuilderType "host" }}
      - name: storage-host
        hostPath:
          path: {{ .Values.imageCleaner.host.dockerLibDir }}
      - name: socket-host
        hostPath:
          path: {{ .Values.imageCleaner.host.dockerSocket }}
          type: Socket
      {{- end }}
      {{- if eq .Values.imageBuilderType "dind" }}
      - name: storage-dind
        hostPath:
          path: {{ .Values.dind.hostLibDir }}
          type: DirectoryOrCreate
      - name: socket-dind
        hostPath:
          path: {{ .Values.dind.hostSocketDir }}/docker.sock
          type: Socket
      {{- end }}
      {{- if eq .Values.imageBuilderType "pink" }}
      - name: storage-pink
        hostPath:
          path: {{ .Values.pink.hostStorageDir }}
          type: DirectoryOrCreate
      - name: socket-pink
        hostPath:
          path: {{ .Values.pink.hostSocketDir }}/podman.sock
          type: Socket
      {{- end }}
{{- end }}
