{{- if ne .Values.imageBuilderType "host" -}}
{{- $builderName := .Values.imageBuilderType -}}
{{- $builder := index .Values $builderName -}}
{{- $daemonset := $builder.daemonset -}}

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name }}-{{ $builderName }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name:  {{ .Release.Name }}-{{ $builderName }}
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-{{ $builderName }}
        app: binder
        component: image-builder
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      {{- with include "jupyterhub.imagePullSecrets" (dict "root" . "image" $daemonset.image) }}
      imagePullSecrets: {{ . }}
      {{- end }}
      {{- with .Values.config.KubernetesBuildExecutor.tolerations }}
      tolerations:
        {{- . | toYaml | nindent 8 }}
      {{- end }}
      nodeSelector: {{ .Values.config.BinderHub.build_node_selector | toJson }}

      {{- with $builder.initContainers }}
      initContainers:
        {{- . | toYaml | nindent 8 }}
      {{- end }}

      containers:
        - name: {{ $builderName }}
          image: {{ $daemonset.image.name }}:{{ $daemonset.image.tag }}
          {{- with $daemonset.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          {{- with $builder.resources }}
          resources:
            {{- $builder.resources | toYaml | nindent 12 }}
          {{- end }}
          {{- if eq $builderName "dind" }}
          args:
            - dockerd
            - --storage-driver={{ $builder.storageDriver }}
            - -H unix://{{ $builder.hostSocketDir }}/docker.sock
            {{- with $daemonset.extraArgs }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          securityContext:
            privileged: true
          volumeMounts:
          - name: dockerlib-dind
            mountPath: /var/lib/docker
          - name: run-dind
            mountPath: {{ $builder.hostSocketDir }}
          {{- end }}
          {{- if eq $builderName "pink" }}
          args:
            - podman
            - system
            - service
            - --time=0
            - unix://{{ $builder.hostSocketDir }}/podman.sock
            {{- with $daemonset.extraArgs }}
            {{- . | toYaml | nindent 12 }}
            {{- end }}
          securityContext:
            privileged: true
            runAsUser: 0
          volumeMounts:
          - name: podman-containers
            mountPath: /var/lib/containers/storage
          - name: run-pink
            mountPath: {{ $builder.hostSocketDir }}
          {{- end }}

          {{- with $daemonset.extraVolumeMounts }}
          {{- . | toYaml | nindent 10 }}
          {{- end }}

          {{- with $daemonset.lifecycle }}
          lifecycle:
            {{- . | toYaml | nindent 12 }}
          {{- end }}

      volumes:
        {{- if eq $builderName "dind" }}
        - name: dockerlib-dind
          hostPath:
            path: {{ $builder.hostLibDir }}
            type: DirectoryOrCreate
        - name: run-dind
          hostPath:
            path: {{ $builder.hostSocketDir }}
            type: DirectoryOrCreate
        {{- with $daemonset.extraVolumes }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
        {{- end }}
        {{- if eq $builderName "pink" }}
        - name: podman-containers
          hostPath:
            path: {{ $builder.hostStorageDir }}
            type: DirectoryOrCreate
        - name: run-pink
          hostPath:
            path: {{ $builder.hostSocketDir }}
            type: DirectoryOrCreate
        {{- with $daemonset.extraVolumes }}
        {{- . | toYaml | nindent 8 }}
        {{- end }}
        {{- end }}

      terminationGracePeriodSeconds: 30
{{- end }}
